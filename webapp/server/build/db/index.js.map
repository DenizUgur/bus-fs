{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/db/index.ts"],"names":[],"mappings":";;;AAAA,yCAAiD;AACjD,IAAI,SAAoB,CAAC;AACzB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,YAAY,EAAE;IACzC,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,SAAS,EAAE;QAC1C,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;KACjD;SAAM;QACN,SAAS,GAAG,IAAI,qBAAS,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE;YACnD,OAAO,EAAE,UAAU;SACnB,CAAC,CAAC;KACH;CACD;KAAM;IACN,SAAS,GAAG,IAAI,qBAAS,CAAC,4CAA4C,EAAE;QACvE,OAAO,EAAE,UAAU;KACnB,CAAC,CAAC;CACH;AAED,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CACjC,WAAW,EACX;IACC,GAAG,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,UAAU,EAAE,IAAI;KAChB;IACD,MAAM,EAAE;QACP,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,SAAS,EAAE,KAAK;QAChB,YAAY,EAAE,CAAC;KACf;IACD,MAAM,EAAE;QACP,IAAI,EAAE,qBAAS,CAAC,MAAM;KACtB;CACD,EACD;IACC,eAAe,EAAE,IAAI;IACrB,SAAS,EAAE,KAAK;IAChB,SAAS,EAAE,KAAK;CAChB,CACD,CAAC;AAwDO,8BAAS;AAtDlB,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAC5B,MAAM,EACN;IACC,GAAG,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,UAAU,EAAE,IAAI;KAChB;IACD,WAAW,EAAE;QACZ,IAAI,EAAE,qBAAS,CAAC,MAAM;KACtB;IACD,KAAK,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,MAAM;KACtB;IACD,GAAG,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,MAAM;KACtB;IACD,QAAQ,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,OAAO;KACvB;IACD,KAAK,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,OAAO;KACvB;CACD,EACD;IACC,eAAe,EAAE,IAAI;IACrB,SAAS,EAAE,KAAK;IAChB,SAAS,EAAE,KAAK;CAChB,CACD,CAAC;AA0BkB,oBAAI;AAxBxB,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAC7B,OAAO,EACP;IACC,EAAE,EAAE;QACH,IAAI,EAAE,qBAAS,CAAC,MAAM;KACtB;IACD,IAAI,EAAE;QACL,IAAI,EAAE,qBAAS,CAAC,MAAM;KACtB;IACD,SAAS,EAAE;QACV,IAAI,EAAE,qBAAS,CAAC,MAAM;KACtB;IACD,MAAM,EAAE;QACP,IAAI,EAAE,qBAAS,CAAC,MAAM;KACtB;CACD,EACD;IACC,eAAe,EAAE,IAAI;IACrB,SAAS,EAAE,KAAK;IAChB,SAAS,EAAE,KAAK;CAChB,CACD,CAAC;AAGwB,sBAAK;AAD/B,kBAAe,SAAS,CAAC","sourcesContent":["import { Sequelize, DataTypes } from \"sequelize\";\nlet sequelize: Sequelize;\nif (process.env.NODE_ENV == \"production\") {\n\tif (process.env.DATABASE_URL == undefined) {\n\t\tthrow new Error(\"DATABASE_URL is not available\");\n\t} else {\n\t\tsequelize = new Sequelize(process.env.DATABASE_URL, {\n\t\t\tdialect: \"postgres\",\n\t\t});\n\t}\n} else {\n\tsequelize = new Sequelize(\"postgres://admin:root@localhost:5432/busfs\", {\n\t\tdialect: \"postgres\",\n\t});\n}\n\nconst RateLimit = sequelize.define(\n\t\"ratelimit\",\n\t{\n\t\tkey: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\tprimaryKey: true,\n\t\t},\n\t\tpoints: {\n\t\t\ttype: DataTypes.INTEGER,\n\t\t\tallowNull: false,\n\t\t\tdefaultValue: 0,\n\t\t},\n\t\texpire: {\n\t\t\ttype: DataTypes.BIGINT,\n\t\t},\n\t},\n\t{\n\t\tfreezeTableName: true,\n\t\tcreatedAt: false,\n\t\tupdatedAt: false,\n\t}\n);\n\nconst User = sequelize.define(\n\t\"user\",\n\t{\n\t\toid: {\n\t\t\ttype: DataTypes.STRING,\n\t\t\tprimaryKey: true,\n\t\t},\n\t\tdisplayName: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\temail: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tsid: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tenrolled: {\n\t\t\ttype: DataTypes.BOOLEAN,\n\t\t},\n\t\tlevel: {\n\t\t\ttype: DataTypes.INTEGER,\n\t\t},\n\t},\n\t{\n\t\tfreezeTableName: true,\n\t\tcreatedAt: false,\n\t\tupdatedAt: false,\n\t}\n);\n\nconst Stats = sequelize.define(\n\t\"stats\",\n\t{\n\t\tip: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\ttype: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\tuserAgent: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t\torigin: {\n\t\t\ttype: DataTypes.STRING,\n\t\t},\n\t},\n\t{\n\t\tfreezeTableName: true,\n\t\tcreatedAt: false,\n\t\tupdatedAt: false,\n\t}\n);\n\nexport default sequelize;\nexport { RateLimit, User, Stats };\n"]}